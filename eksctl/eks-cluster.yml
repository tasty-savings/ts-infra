apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: ts-eks   # 클러스터 이름
  region: ap-northeast-2     # AWS 리전
  version: "1.31"        # Kubernetes 버전

vpc:
  id: vpc-02b79fa07789d712e
  subnets:
    public:
      ap-northeast-2a:
        id: subnet-09f2cb9f48dc32462
      ap-northeast-2b:
        id: subnet-0b0f584287b22e2c8
    # private:
    #   ap-northeast-2a:
    #     id: subnet-03d0636ec23f2dedd
    #   ap-northeast-2b:
    #     id: subnet-03873b6292d53455b

iam:
  withOIDC: true   # OIDC(계정 연동)를 활성화하여 서비스 계정과 IAM 역할 연결
  podIdentityAssociations:
    - namespace: "karpenter"
      serviceAccountName: karpenter
      roleName: ts-karpenter-role
      permissionPolicyARNs:
      - arn:aws:iam::637423620662:policy/KarpenterControllerPolicy-ts-karpenter # IAM 정책
  serviceAccounts:  # 필요한 서비스 계정 생성
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AutoScalingFullAccess
      roleName: eks-cluster-autoscaler

iamIdentityMappings:
  - arn: "arn:aws:iam::637423620662:role/ts-karpenter-role" # IAM 역할
    username: system:node:{{EC2PrivateDNSName}}
    groups:
    - system:bootstrappers
    - system:nodes

  # serviceAccounts:
  #   - matadata: # ALB 서비스 계정
  #     name: 

addons:
  - name: vpc-cni
    version: latest   # 네트워크 플러그인
  - name: coredns
    version: latest  # DNS 서버
  - name: kube-proxy
    version: latest  # 네트워크 프록시
  - name: eks-pod-identity-agent
  # - name: aws-load-balancer-controller
  #   version: latest # ALB 및 NLB 관리 #제외 -> 매니페스트 파일로 관리

cloudWatch:
  clusterLogging:
    enableTypes: ["api", "scheduler"]

nodeGroups:
  - name: autoscaler-ng
    instanceType: t2.medium
    desiredCapacity: 1
    minSize: 1
    maxSize: 3
    volumeSize: 30
    labels: {role: autoscaler, environment: production}
    tags:
      Name: autoscaler-nodes
    iam:
      withAddonPolicies:
        autoScaler: true
        externalDNS: true
        awsLoadBalancerController: true
    ssh:
      allow: true
      publicKeyName: ktb-TSP  # SSH 키 설정
managedNodeGroups:
  - name: ts-karpenter-ng
    instanceType: t2.medium
    amiFamily: AmazonLinux2
    desiredCapacity: 2
    minSize: 1
    maxSize: 3
    # labels:
    #   nodegroup: karpenter
    #   environment: production
